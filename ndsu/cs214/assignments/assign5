
  CS214
  PROGRAM 5       DUE: On or before Friday, May 18, 1990 at 5 PM

  Do the following to program 4.

       1)  Allow the predefined characters to be changed using argv and argc,
          see section 7.12 of "A Book on C" or section 5.11 of K&R.   If  you
          want  to  use  a  switch-case  statement this means you must use an
          array for storing your chars  and  a  "for"  match  to  produce  an
          integer to switch on.

       2)  Add to your macro processor the ability to do #include operations,
          like the C compiler does.  The form here is: $2'filename'.

  More specifically, add a new primitive that allows the contents of a  named
  file  to be included in the input text, without disrupting the flow of that
  text (i.e. it works like a subroutine call).  This facility will be  useful
  for  providing  files of macro definitions (libraries) which can be used by
  particular application files, without the necessity for including a copy of
  the definitions in that application file.  Of course, this technique is  an
  important  software  engineering principal.  Make your package able to nest
  calls on files to level 3 (a stack of 4 FILE data items).   NOTE:  The  top
  FILE  item  needs  to  be  initialized to zero, so that it will provide you
  input from stdin (which is the 0 file descriptor).  No fopen  is  necessary
  for stdin.  The required format for this is $2'filename'.  Use stream input
  as described in getc(3S), putc(3S), and use fopen(3S) and fclose(3S) of the
  UNIX  Programmer's  Manual (UPM) and also in section 11.4 of ABC (our text)
  and 7.6 of K&R.  This package could be used again in other  situations,  so
  package  it  nicely  as  a separate level of service routines (nxtchr() and
  flopen("filename")) in a separate source code file, ie.  an  abstract  data
  structure.   Demonstrate  the  generation  of  your  macro system using the
  make(I) command, that is, compile and link the latest versions  of  macro.c
  and  macio.c.   Be  sure  to  demonstrate  that  your macro processor works
  correctly by testing it  on  files  ex2.incl  and  ex3  in  ../Info/mactst,
  comparing  to  my  version  of macro.  Also document it for easy use in the
  future.  This new functionality (macio.c) should only take about a 10  line
  package of code, so work carefully and make the addition cleanly.



















                                     - 1 -








