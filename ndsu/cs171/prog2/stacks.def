DEFINITION MODULE STACKS;

(***********************************************************************)
(*                                                                     *)
(*  DEFINITION MODULE STACKS                                           *)
(*                                                                     *)
(*  WRITTEN BY CHRISTOPHER C. TJON                                     *)
(*  FOR DR. ERICKSON'S CS171                                           *)
(*  17 DECEMBER 1989                                                   *)
(*                                                                     *)
(*  THIS MODULE IS AN ADAPTED IMPLEMENTATION OF THE STACKADT MODULE    *)
(*  ON PAGES 132 THRU 135 IN THE TEXT :                                *)
(*                                                                     *)
(*     A SECOND COURSE IN COMPUTER SCIENCE WITH MODULA-2               *)
(*                                                                     *)
(*     WRITTEN BY DANIEL D. MCCRACKEN AND WILLIAM I. SALMON            *)
(*                                                                     *)
(*     THIS MODULE CONTAINS THE FOLLOWING PROCEDURES:                  *)
(*                                                                     *)
(*       1. CREATE STACK          5. OVERFLOW ERROR                    *)
(*       2. MAKE STACK EMPTY      6. POP                               *)
(*       3. PUSH                  7. STACK IS EMPTY                    *)
(*       4. STACKTOP              8. STACK IS FULL                     *)
(*                                                                     *)
(***********************************************************************)

FROM InOut IMPORT WriteString, WriteLn;

FROM DATAITEM IMPORT DATATYPE;

FROM Storage IMPORT ALLOCATE, Available;

TYPE STACK; (* OPAQUE TYPE *)


PROCEDURE CREATESTACK( VAR S : STACK);

(***********************************************************************)
(* REQUIRES : NOTHING                                                  *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : CREATES AND INITIALIZES AN EMPTY STACK                   *)
(***********************************************************************)


PROCEDURE MAKESTACKEMPTY( VAR S : STACK);

(***********************************************************************)
(* REQUIRES : THAT STACK HAS BEEN CREATED                              *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : MAKES AN EXISTING STACK EMPTY                            *)
(***********************************************************************)


PROCEDURE PUSH(VAR S       : STACK;
                   NEWITEM : DATATYPE);

(***********************************************************************)
(* REQUIRES : STACK HAS BEEN INITIALIZED AND IS NOT FULL               *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : PUSHES NEW ITEM ON TO THE TOP OF THE STACK               *)
(***********************************************************************)


PROCEDURE OVERFLOWERROR;

(***********************************************************************)
(* REQUIRES : NOTHING                                                  *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : DISPLAYS AN ERROR MESSAGE AND HALTS THE RUN              *)
(***********************************************************************)


PROCEDURE UNDERFLOWERROR;

(***********************************************************************)
(* REQUIRES : NOTHING                                                  *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : DISPLAYS AN ERROR MESSAGE AND HALTS THE RUN              *)
(***********************************************************************)


PROCEDURE POP( VAR S          : STACK;
               VAR STACKVALUE : DATATYPE );

(***********************************************************************)
(* REQUIRES : THAT STACK HAS BEEN INITIALIZED AND IS NOT EMPTY         *)
(* MODIFIES : THE STACK STRUCTURE                                      *)
(* EFFECTS  : COPIES TOP ELEMENT FROM STACK INTO STACKVALUE, THIS      *)
(*            EFFECTIVELY REMOVES IT FROM THE TOP OF THE STACK         *)
(***********************************************************************)


PROCEDURE STACKISEMPTY(VAR S : STACK) : BOOLEAN;

(***********************************************************************)
(* REQUIRES : STACK HAS BEEN INITIALIZED                               *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : RETURNS TRUE IF STACK IS EMPTY OTHERWISE FALSE           *)
(***********************************************************************)


PROCEDURE STACKISFULL(VAR S : STACK) : BOOLEAN;

(***********************************************************************)
(* REQUIRES : STACK HAS BEEN INITIALIZED                               *)
(* MODIFIES : NOTHING                                                  *)
(* EFFECTS  : RETURNS TRUE IF STACK IS FULL OTHERWISE FALSE            *)
(***********************************************************************)


PROCEDURE STACKTOP( VAR S : STACK ) : DATATYPE;

(***********************************************************************)
(* REQUIRES : STACK HAS BEEN INITIALIZED AND IS NOT EMPTY              *)
(* MODIFIES : NOTHING (STACK IS UNCHANGED)                             *)
(* EFFECTS  : RETURNS VALUE OF THE ITEM AT THE TOP OF THE STACK        *)
(***********************************************************************)


END STACKS.
