                     ASSEMBLER WITH ASSIST

ASSIST (ASSEMBLER SYSTEM FOR STUDENT INSTRUCTION AND SYSTEM TEACHING)
IS A SMALL HIGH-SPEED, LOW OVERHEAD ASSEMBLER/INTERPRETER SYSTEM FOR
USE BY STUDENTS LEARNING ASSEMBLER.  ASSIST PROVIDES THE STUDENT WITH
A NUMBER OF PSEUDO OPERATIONS NOT AVAILABLE UNDER IBM 370 ASSEMBLER,
WHICH ARE VERY HELPFUL TO THE BEGINNING STUDENT.  A FEW OF THEM ARE:

*****************************   XDUMP  ********************************

XDUMP CAN BE USED TO PRINT REGISTER CONTENTS OR STORAGE CONTENTS THUS:
CODING XDUMP WITH NO OPERANDS RESULTS IN THE PRINTING OF THE GENERAL
PURPOSE REGISTER CONTENTS IN HEXADECIMAL. THE COND. CODE, ILC, PROGRAM
MASK AND THE LAST 32 BITS OF THE PSW (INSTRUCTION ADDRESS REGISTER)
ARE DUMPED ALSO.

***********************  XDUMP AREA,LENGTH   ************************   *

DUMPS THE AREA OF MEMORY BEGINNING AT ADDRESS AREA AND LENGTH. THE
FOLLOWING ARE VALID USES OF XDUMP:
XDUMP               DUMPS REGISTERS (DO NOT USE COMMENTS ON THIS LINE)
XDUMP  AREA+10,60   DUMPS 60 BYTES OF MEMORY BEGINNING AT AREA+10
XDUMP  20(4,8),100  DUMPS 100 BYTES STARTING 20 BYTES BEYOND THE SUM
                    OF THE ADDRESSES IN REGISTERS 4 AND 8
XDUMP  TABLE(3),12  DUMPS 12 BYTES STARTING AT TABLE+CONTENTS OF R3

***********************   XREAD AREA,LENGTH   ************************

SPECIFIES THAT "LENGTH" BYTES BE READ IN AND PLACED IN MEMORY STARTING
AT AREA. THE INPUT DATA IS IN EBCDIC AND THE LENGTH CAN BE AT MOST 80.
THE CONDITION CODE IS SET TO 0 IF A READ WAS SUCCESSFUL AND 1 IF NOT.
FOR EXAMPLE       XREAD  CARD,80
                  BNZ    NOMORE
WILL PUT 80 BYTES AT CARD, IF NO MORE INPUT DATA IS AVAILABLE, IT WILL
BRANCH TO THE LOCATION NOMORE OR THE NEXT INSTRUCTION.

******************  XPRNT  AREA,LENGTH  *******************************

SPECIFIES THAT THE "LENGTH" BYTES BEGINNING AT AREA BE TRANSFERRED AS
OUTPUT TO THE OUTPUT FILE.  THE MAXIMUM LENGTH IS 133. THE FIRST
CHARACTER IS CONSUMED FOR ANSI CARRIAGE CONTROL (BLANK FOR SNGLE
SPACE, 0 FOR DOUBLE, - FOR TRIPLE, + FOR NONE, AND 1 FOR NEW PAGE).
THE FOLLOWING READS CARDS IN AND PRINTS THEM UNTIL END-OF-FILE.

PROG      START
          USING PROG,15
GETCARD   XREAD CARD,80      .INPUT A CARD
          BNZ   NOMORE       .IF CC=1 BRANCH OUT
          XPRNT CARD-1,81    .ECHO A CARD TO THE PRINTER
          BR    GETCARD
NOMORE    BR    14           .BRANCH HERE TO FINISH IF NOMORE CARD
          DC    C'0'         .CARRIAGE CONTROL CHARACTER
CARD      DS    CL80
          END

********************* XDECI  REG,ADDRESS  ****************************

CAUSES THE SCANNING OF THE AREA BEGINNING AT ADDRESS FOR A VALID
NUMBER IN EBCDIC, CONVERTS IT TO BINARY (2'S COMP) AND PLACES IT
IN REG.  THE CONDITION CODE IS SET TO 0,1,2 DEPENDING ON WHETHER THE
SIGN IS 0,+,- RESPECTIVELY. THE NUMBER MUST NOT EXCEED 9 DIGITS.
IF AN ERROR IS ENCOUNTERED, REGISTER 1 IS SET TO THE ADDRESS OF THE
PROBLEM, COND. CODE IS SET TO 3 AND REG ITSELF IS UNCHANGED. IF THERE
IS NO ERROR, REG 1 IS SET TO THE NEXT VALID NUMBER IN THE INPUT STREAM.

********************  XDECO REG,ADDRESS ********************************

CONVERTS THE 2'S COMP. NUMBER IN REG TO EBCDIC AND PLACES IT IN THE
BYTE FIELD STARTING AT ADDRESS WITH LEADING ZEROS SUPPRESSED AND A
MINUS SIGN PREFIXED IF REQUIRED.
